{"version":3,"sources":["components/Search/components/SearchField/SearchField.scss","scss/App.scss","components/Search/components/ListItem/ListItem.scss","components/Search/Search.tsx","components/Search/SearchRequest.tsx","components/Search/components/SearchField/SearchField.tsx","components/Search/components/ListItem/ListItem.tsx","App.tsx","serviceWorker.js","index.tsx","components/Search/Search.scss"],"names":["module","exports","cancelRequest","axios","create","baseURL","SearchField","className","test","ListItem","itemData","title","release","release_date","cover","poster_path","overview","root","titleBlock","date","src","width","height","alt","substring","length","CancelToken","Search","useState","results","setResults","apiKey","keys","TMDB","key","console","log","testQuery","getResults","url","a","searchRequest","get","cancelToken","c","then","response","data","catch","error","isCancel","message","useEffect","list","map","item","itemID","id","JSON","stringify","App","fontsReady","setFontsReady","WebFontLoader","load","custom","families","fontactive","setTimeout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.55c5f823.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"SearchField_test__2K7t9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hidden\":\"App_hidden__aJPTc\",\"linkColorLink\":\"App_link-color-link__3JHiL\",\"linkColorVisited\":\"App_link-color-visited__2TCKx\",\"linkColorHover\":\"App_link-color-hover__3-gY5\",\"linkColorActive\":\"App_link-color-active__1gQe1\",\"fontSizeMicro\":\"App_font-size-micro__24z6y\",\"fontSizeTiny\":\"App_font-size-tiny__35lVx\",\"fontSizeXxxSmall\":\"App_font-size-xxx-small__1XI4L\",\"fontSizeXxSmall\":\"App_font-size-xx-small__2RTZR\",\"fontSizeXSmall\":\"App_font-size-x-small__2DZDQ\",\"fontSizeSmall\":\"App_font-size-small__3BU_b\",\"fontSizeNormal\":\"App_font-size-normal__3YasS\",\"fontSizeMedium\":\"App_font-size-medium__3kH0v\",\"fontSizeMediumLarge\":\"App_font-size-medium-large__2_t2F\",\"fontSizeLarge\":\"App_font-size-large__3aHgx\",\"fontSizeXLarge\":\"App_font-size-x-large__3J0R6\",\"fontSizeXxLarge\":\"App_font-size-xx-large__kZTSX\",\"fontSizeXxxLarge\":\"App_font-size-xxx-large__2pO6w\",\"fontSizeHuge\":\"App_font-size-huge__1Vj15\",\"fontSizeXHuge\":\"App_font-size-x-huge__2tgxX\",\"fontSizeXxHuge\":\"App_font-size-xx-huge__2Vren\",\"fontSizeXxxHuge\":\"App_font-size-xxx-huge__2ZIo8\",\"fontSizeMassive\":\"App_font-size-massive__HgFDH\",\"fontSizeGigantic\":\"App_font-size-gigantic__1WP28\",\"fontSizeHumongous\":\"App_font-size-humongous__24Bz6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ListItem_root__22XXP\",\"titleBlock\":\"ListItem_title-block__2_R9z\",\"date\":\"ListItem_date__1Y1ml\",\"description\":\"ListItem_description__1OZ97\"};","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport classNames from \"classnames\";\r\n\r\nimport keys from \"@app/keys.json\";\r\nimport { default as searchRequest } from \"./SearchRequest\";\r\n\r\nimport { root, list } from \"./Search.scss\";\r\nimport SearchField from \"./components/SearchField/SearchField\";\r\nimport ListItem from \"./components/ListItem/ListItem\";\r\n\r\n\r\nconst searchThreshold = 0;\r\nconst CancelToken = axios.CancelToken;\r\nlet cancelRequest;\r\n\r\nconst Search: React.FC = () => {\r\n\r\n  const [results, setResults] = useState([]);\r\n\r\n  const { TMDB: { key: apiKey } } = keys;\r\n  console.log(apiKey);\r\n\r\n  // const testQuery = 'https://api.themoviedb.org/3/search/movie?api_key=b0051197ce34bf52555943ba1b4f5d4d&query=Jack+Reacher';\r\n\r\n  /*\r\n  // Search\r\n  - https://api.themoviedb.org/3/search/movie?api_key=b0051197ce34bf52555943ba1b4f5d4d&language=en-US&page=1&include_adult=false\r\n  // Genre\r\n  - https://api.themoviedb.org/3/genre/movie/list?api_key=b0051197ce34bf52555943ba1b4f5d4d&language=en-US\r\n  // trending\r\n  - https://api.themoviedb.org/3/trending/movie/week?api_key=b0051197ce34bf52555943ba1b4f5d4d\r\n  */\r\n\r\n\r\n  const urls = {\r\n    trending: 'trending/movie/week?api_key=',\r\n    search: 'search/movie?api_key=',\r\n    genre: 'genre/movie/list?api_key=',\r\n  };\r\n\r\n  // const testQuery = urls.genre + apiKey + '&language=en-US';\r\n  // const testQuery = urls.search + apiKey + '&language=en-US' + '&query=Jack+Reacher';\r\n  const testQuery = urls.trending + apiKey;\r\n\r\n  console.log('testQuery: ' + testQuery);\r\n\r\n  const getResults = async (url) => {\r\n    const response: any = await searchRequest.get(url, {\r\n      cancelToken: new CancelToken(c => {\r\n        // this function will receive a cancel function as a parameter\r\n        cancelRequest = c;\r\n      })\r\n    })\r\n      .then(function (response) {\r\n        // handle success\r\n        console.log(\r\n          \"searching!! resuts are -> \",\r\n          response,\r\n          // \" with firter ->\",\r\n          // query,\r\n          \"and URL ->\",\r\n          url\r\n        );\r\n\r\n        // const filteredResults = response.data.filter(result => {\r\n        //   console.log(\"filteredResults\", result);\r\n        //   return result.name.toLowerCase().includes(query.toLowerCase());\r\n        // });\r\n\r\n        // console.log('\"searching!! filtered resuts are ->', filteredResults);\r\n\r\n        // const sortByName = (a, b) => {\r\n        //   const nameA = a.name.toUpperCase();\r\n        //   const nameB = b.name.toUpperCase();\r\n        //   let comparison = 0;\r\n        //   if (nameA > nameB) {\r\n        //     comparison = 1;\r\n        //   } else if (nameA < nameB) {\r\n        //     comparison = -1;\r\n        //   }\r\n        //   return comparison;\r\n        // };\r\n\r\n        // const sortResults = results => {\r\n        //   console.log(\"groups before filtering:\", results);\r\n        //   const groups = results.filter(result => {\r\n        //     console.log(\"filteredResults\", result);\r\n        //     return result.type.includes(\"group\");\r\n        //   });\r\n\r\n        //   groups.sort(sortByName);\r\n\r\n        //   const items = results.filter(result => {\r\n        //     console.log(\"filteredResults\", result);\r\n        //     return result.type.includes(\"item\");\r\n        //   });\r\n\r\n        //   items.sort(sortByName);\r\n        //   console.log(\"groups:\", groups, items);\r\n        //   return [...groups, ...items];\r\n        // };\r\n\r\n        // console.log(\"filteredResults: \", filteredResults);\r\n        // return sortResults(filteredResults);\r\n\r\n        // const { results } = response.data;\r\n\r\n        console.log('results are: ', response.data);\r\n        const { data: { results } } = response;\r\n        return results;\r\n      })\r\n      .catch(error => {\r\n        // handle error\r\n        // console.log(error);\r\n        if (axios.isCancel(error)) {\r\n          console.log(\"error cancelled\", error.message);\r\n          return [];\r\n        } else {\r\n          console.log(\"error\", error.message);\r\n        }\r\n        return;\r\n      });\r\n    setResults(response);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect...');\r\n    if (cancelRequest) {\r\n      cancelRequest(\"Request canceled.\");\r\n    }\r\n    // setResult([]);\r\n    // return;\r\n\r\n    getResults(testQuery);\r\n  }, [testQuery]);\r\n\r\n  return (\r\n    <div className={root}>\r\n      <SearchField />\r\n      {results && results.length > 0 && (\r\n        <ul className={list}>\r\n          {results.map(item => {\r\n\r\n            const { id: itemID } = item;\r\n            return (\r\n              <ListItem itemData={item} key={itemID} />\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n      <pre>{JSON.stringify(results, null, 2)}</pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL:\r\n    \"https://api.themoviedb.org/3/\"\r\n});\r\n","import React from \"react\";\r\n\r\nimport { test } from './SearchField.scss';\r\n\r\nconst SearchField: React.FC = () => (<div className={test}>SearchField here</div>);\r\n\r\nexport default SearchField;\r\n","import React from \"react\";\r\n\r\nimport classNames from \"classnames\";\r\nimport { root, titleBlock, date, description } from './ListItem.scss';\r\n\r\ninterface ListItemProps {\r\n  itemData: { [key: string]: any }\r\n}\r\n\r\nconst ListItem: React.FC<ListItemProps> = ({ itemData }) => {\r\n  const maxOverviewLength = 150;\r\n  const { title, release_date: release, poster_path: cover, overview } = itemData;\r\n  const coverPath = 'https://image.tmdb.org/t/p/w185/'\r\n\r\n  return (\r\n    <li className={root}>\r\n      <div>\r\n        <div className={titleBlock}>\r\n          <h4>{title}</h4>\r\n          <span className={date}>{release}</span>\r\n        </div>\r\n        <img src={coverPath + cover} width=\"\" height=\"\" alt={title} className={cover} />\r\n        <div>\r\n          <p>\r\n            {overview.substring(0, maxOverviewLength)} {overview.length > maxOverviewLength && '...'}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      {/* <pre>{JSON.stringify(itemData, null, 2)}</pre> */}\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default ListItem;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport WebFontLoader from \"webfontloader\";\r\nimport './scss/App.scss';\r\n\r\nimport Search from './components/Search/Search';\r\n\r\ninterface Props {\r\n  test: string;\r\n}\r\n\r\nfunction App() {\r\n  const [fontsReady, setFontsReady] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch necessary fonts.\r\n    WebFontLoader.load({\r\n      custom: {\r\n        families: [\r\n          'opensasans',\r\n          'anton'\r\n        ]\r\n      },\r\n      fontactive: () => {\r\n        setTimeout(() => {\r\n          setFontsReady(true);\r\n        }, 1000);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      { fontsReady && (<>\r\n        <header>\r\n          <h1>Movie Library</h1>\r\n        </header>\r\n        <main>\r\n          Main content here<br />\r\n          <Search />\r\n        </main>\r\n        <footer>\r\n          Footer here\r\n        </footer>\r\n      </>)}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Search_root__258Xl\",\"list\":\"Search_list__29D6I\"};"],"sourceRoot":""}